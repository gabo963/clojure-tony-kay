["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.inspect.inspect_client');\ngoog.require('cljs.core');\ngoog.require('edn_query_language.core');\ngoog.require('com.fulcrologic.fulcro.algorithms.lookup');\ngoog.require('goog.object');\ngoog.require('com.fulcrologic.fulcro.inspect.diff');\ngoog.require('com.fulcrologic.fulcro.inspect.transit');\ngoog.require('cljs.core.async');\ngoog.require('taoensso.encore');\ngoog.require('taoensso.timbre');\n\n/** @define {boolean} */\ngoog.define(\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\",false);\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_ !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.tools_app_STAR_ !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.tools_app_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_ !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\ncom.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key = new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491);\nif((typeof com !== 'undefined') && (typeof com.fulcrologic !== 'undefined') && (typeof com.fulcrologic.fulcro !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client !== 'undefined') && (typeof com.fulcrologic.fulcro.inspect.inspect_client.send_ch !== 'undefined')){\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.send_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.dropping_buffer((50000)));\n}\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message = (function com$fulcrologic$fulcro$inspect$inspect_client$post_message(type,data){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.inspect.inspect_client.send_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type,data], null));\n});\n/**\n * Returns true when env is a cljs macro &env\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.cljs_QMARK_ = (function com$fulcrologic$fulcro$inspect$inspect_client$cljs_QMARK_(env){\nreturn cljs.core.boolean$(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\n});\n/**\n * Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n *   `gobj/get`.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget = (function com$fulcrologic$fulcro$inspect$inspect_client$isoget(var_args){\nvar G__54203 = arguments.length;\nswitch (G__54203) {\ncase 2:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2 = (function (obj,k){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3(obj,k,null);\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3 = (function (obj,k,default$){\nvar or__4131__auto__ = (function (){var G__54214 = obj;\nvar G__54215 = (function (){var G__54216 = k;\nif((G__54216 == null)){\nreturn null;\n} else {\nreturn cljs.core.name(G__54216);\n}\n})();\nreturn goog.object.get(G__54214,G__54215);\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn default$;\n}\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$lang$maxFixedArity = 3;\n\ncom.fulcrologic.fulcro.inspect.inspect_client.app_state = (function com$fulcrologic$fulcro$inspect$inspect_client$app_state(app__$1){\nvar G__54218 = app__$1;\nvar G__54218__$1 = (((G__54218 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__54218));\nif((G__54218__$1 == null)){\nreturn null;\n} else {\nreturn cljs.core.deref(G__54218__$1);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.runtime_atom = (function com$fulcrologic$fulcro$inspect$inspect_client$runtime_atom(app__$1){\nvar G__54221 = app__$1;\nif((G__54221 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(G__54221);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.state_atom = (function com$fulcrologic$fulcro$inspect$inspect_client$state_atom(app__$1){\nvar G__54223 = app__$1;\nif((G__54223 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__54223);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.app_uuid = (function com$fulcrologic$fulcro$inspect$inspect_client$app_uuid(app__$1){\nvar G__54225 = app__$1;\nvar G__54225__$1 = (((G__54225 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__54225));\nvar G__54225__$2 = (((G__54225__$1 == null))?null:cljs.core.deref(G__54225__$1));\nif((G__54225__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__54225__$2,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.remotes = (function com$fulcrologic$fulcro$inspect$inspect_client$remotes(app__$1){\nvar G__54227 = com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1);\nvar G__54227__$1 = (((G__54227 == null))?null:cljs.core.deref(G__54227));\nif((G__54227__$1 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"remotes\",\"com.fulcrologic.fulcro.application/remotes\",1823703517).cljs$core$IFn$_invoke$arity$1(G__54227__$1);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.app_id = (function com$fulcrologic$fulcro$inspect$inspect_client$app_id(app__$1){\nvar G__54228 = com.fulcrologic.fulcro.inspect.inspect_client.app_state(app__$1);\nif((G__54228 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233).cljs$core$IFn$_invoke$arity$1(G__54228);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.fulcro_app_id = (function com$fulcrologic$fulcro$inspect$inspect_client$fulcro_app_id(app__$1){\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"id\",\"com.fulcrologic.fulcro.application/id\",-2008968625).cljs$core$IFn$_invoke$arity$1(app__$1);\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.get_component_name = (function com$fulcrologic$fulcro$inspect$inspect_client$get_component_name(component){\nif(cljs.core.truth_(component)){\nvar G__54234 = com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2(component,new cljs.core.Keyword(null,\"fulcro$options\",\"fulcro$options\",-1332196811));\nif((G__54234 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(null,\"displayName\",\"displayName\",-809144601).cljs$core$IFn$_invoke$arity$1(G__54234);\n}\n} else {\nreturn null;\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.comp_transact_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$comp_transact_BANG_(app__$1,tx,options){\nvar tx_BANG_ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"tx!\",\"tx!\",-1308106263));\nreturn (tx_BANG_.cljs$core$IFn$_invoke$arity$3 ? tx_BANG_.cljs$core$IFn$_invoke$arity$3(app__$1,tx,options) : tx_BANG_.call(null,app__$1,tx,options));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.MAX_HISTORY_SIZE = (100);\ncom.fulcrologic.fulcro.inspect.inspect_client.fixed_size_assoc = (function com$fulcrologic$fulcro$inspect$inspect_client$fixed_size_assoc(size,db,key,value){\nvar map__54242 = cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(db,key,value),new cljs.core.Keyword(\"fulcro.inspect.client\",\"history\",\"fulcro.inspect.client/history\",1037107964),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),key);\nvar map__54242__$1 = (((((!((map__54242 == null))))?(((((map__54242.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54242.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54242):map__54242);\nvar db_SINGLEQUOTE_ = map__54242__$1;\nvar history = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54242__$1,new cljs.core.Keyword(\"fulcro.inspect.client\",\"history\",\"fulcro.inspect.client/history\",1037107964));\nif((cljs.core.count(history) > size)){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(db_SINGLEQUOTE_,cljs.core.first(history)),new cljs.core.Keyword(\"fulcro.inspect.client\",\"history\",\"fulcro.inspect.client/history\",1037107964),((function (map__54242,map__54242__$1,db_SINGLEQUOTE_,history){\nreturn (function (p1__54240_SHARP_){\nreturn cljs.core.vec(cljs.core.next(p1__54240_SHARP_));\n});})(map__54242,map__54242__$1,db_SINGLEQUOTE_,history))\n);\n} else {\nreturn db_SINGLEQUOTE_;\n}\n});\n/**\n * Record a snapshot of history on the app itself for inspect to reference via events to do things like preview\n * history.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.update_state_history = (function com$fulcrologic$fulcro$inspect$inspect_client$update_state_history(app__$1,state){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1),cljs.core.update,new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-history\",\"fulcro.inspect.client/state-history\",2111486187),(function (p1__54249_SHARP_){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.fixed_size_assoc(com.fulcrologic.fulcro.inspect.inspect_client.MAX_HISTORY_SIZE,p1__54249_SHARP_,cljs.core.hash(state),state);\n}));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.db_from_history = (function com$fulcrologic$fulcro$inspect$inspect_client$db_from_history(app__$1,state_hash){\nvar G__54255 = com.fulcrologic.fulcro.inspect.inspect_client.runtime_atom(app__$1);\nvar G__54255__$1 = (((G__54255 == null))?null:cljs.core.deref(G__54255));\nvar G__54255__$2 = (((G__54255__$1 == null))?null:new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-history\",\"fulcro.inspect.client/state-history\",2111486187).cljs$core$IFn$_invoke$arity$1(G__54255__$1));\nif((G__54255__$2 == null)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__54255__$2,state_hash);\n}\n});\n/**\n * Notify Inspect that the database changed\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.db_changed_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$db_changed_BANG_(app__$1,old_state,new_state){\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\ncom.fulcrologic.fulcro.inspect.inspect_client.update_state_history(app__$1,new_state);\n\nvar diff = com.fulcrologic.fulcro.inspect.diff.diff(old_state,new_state);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"db-update\",\"fulcro.inspect.client/db-update\",587693556),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.client\",\"prev-state-hash\",\"fulcro.inspect.client/prev-state-hash\",413242088),cljs.core.hash(old_state),new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-hash\",\"fulcro.inspect.client/state-hash\",-1488761756),cljs.core.hash(new_state),new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-delta\",\"fulcro.inspect.client/state-delta\",1518835964),diff]));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.event_data = (function com$fulcrologic$fulcro$inspect$inspect_client$event_data(event){\nvar G__54261 = event;\nvar G__54261__$1 = (((G__54261 == null))?null:goog.object.getValueByKeys(G__54261,\"data\",\"fulcro-inspect-devtool-message\"));\nif((G__54261__$1 == null)){\nreturn null;\n} else {\nreturn com.fulcrologic.fulcro.inspect.transit.read(G__54261__$1);\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.start_send_message_loop = (function com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop(){\nvar c__51860__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__51860__auto__){\nreturn (function (){\nvar f__51861__auto__ = (function (){var switch__51724__auto__ = ((function (c__51860__auto__){\nreturn (function (state_54293){\nvar state_val_54294 = (state_54293[(1)]);\nif((state_val_54294 === (1))){\nvar state_54293__$1 = state_54293;\nvar statearr_54299_54550 = state_54293__$1;\n(statearr_54299_54550[(2)] = null);\n\n(statearr_54299_54550[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_54294 === (2))){\nvar state_54293__$1 = state_54293;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_54293__$1,(4),com.fulcrologic.fulcro.inspect.inspect_client.send_ch);\n} else {\nif((state_val_54294 === (3))){\nvar inst_54290 = (state_54293[(2)]);\nvar state_54293__$1 = state_54293;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_54293__$1,inst_54290);\n} else {\nif((state_val_54294 === (4))){\nvar inst_54267 = (state_54293[(7)]);\nvar inst_54267__$1 = (state_54293[(2)]);\nvar state_54293__$1 = (function (){var statearr_54302 = state_54293;\n(statearr_54302[(7)] = inst_54267__$1);\n\nreturn statearr_54302;\n})();\nif(cljs.core.truth_(inst_54267__$1)){\nvar statearr_54303_54560 = state_54293__$1;\n(statearr_54303_54560[(1)] = (5));\n\n} else {\nvar statearr_54305_54561 = state_54293__$1;\n(statearr_54305_54561[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_54294 === (5))){\nvar inst_54267 = (state_54293[(7)]);\nvar inst_54273 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_54267,(0),null);\nvar inst_54274 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_54267,(1),null);\nvar inst_54275 = [new cljs.core.Keyword(null,\"fulcro-inspect-remote-message\",\"fulcro-inspect-remote-message\",1518065210)];\nvar inst_54276 = [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"data\",\"data\",-232669377),new cljs.core.Keyword(null,\"timestamp\",\"timestamp\",579478971)];\nvar inst_54277 = (new Date());\nvar inst_54278 = [inst_54273,inst_54274,inst_54277];\nvar inst_54279 = cljs.core.PersistentHashMap.fromArrays(inst_54276,inst_54278);\nvar inst_54280 = com.fulcrologic.fulcro.inspect.transit.write(inst_54279);\nvar inst_54281 = [inst_54280];\nvar inst_54282 = cljs.core.PersistentHashMap.fromArrays(inst_54275,inst_54281);\nvar inst_54283 = cljs.core.clj__GT_js(inst_54282);\nvar inst_54284 = window.postMessage(inst_54283,\"*\");\nvar state_54293__$1 = (function (){var statearr_54309 = state_54293;\n(statearr_54309[(8)] = inst_54284);\n\nreturn statearr_54309;\n})();\nvar statearr_54310_54570 = state_54293__$1;\n(statearr_54310_54570[(2)] = null);\n\n(statearr_54310_54570[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_54294 === (6))){\nvar state_54293__$1 = state_54293;\nvar statearr_54311_54572 = state_54293__$1;\n(statearr_54311_54572[(2)] = null);\n\n(statearr_54311_54572[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_54294 === (7))){\nvar inst_54288 = (state_54293[(2)]);\nvar state_54293__$1 = state_54293;\nvar statearr_54312_54584 = state_54293__$1;\n(statearr_54312_54584[(2)] = inst_54288);\n\n(statearr_54312_54584[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n});})(c__51860__auto__))\n;\nreturn ((function (switch__51724__auto__,c__51860__auto__){\nreturn (function() {\nvar com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto__ = null;\nvar com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto____0 = (function (){\nvar statearr_54315 = [null,null,null,null,null,null,null,null,null];\n(statearr_54315[(0)] = com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto__);\n\n(statearr_54315[(1)] = (1));\n\nreturn statearr_54315;\n});\nvar com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto____1 = (function (state_54293){\nwhile(true){\nvar ret_value__51726__auto__ = (function (){try{while(true){\nvar result__51727__auto__ = switch__51724__auto__(state_54293);\nif(cljs.core.keyword_identical_QMARK_(result__51727__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__51727__auto__;\n}\nbreak;\n}\n}catch (e54317){if((e54317 instanceof Object)){\nvar ex__51728__auto__ = e54317;\nvar statearr_54318_54593 = state_54293;\n(statearr_54318_54593[(5)] = ex__51728__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_54293);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e54317;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__51726__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__54596 = state_54293;\nstate_54293 = G__54596;\ncontinue;\n} else {\nreturn ret_value__51726__auto__;\n}\nbreak;\n}\n});\ncom$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto__ = function(state_54293){\nswitch(arguments.length){\ncase 0:\nreturn com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto____0.call(this);\ncase 1:\nreturn com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto____1.call(this,state_54293);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ncom$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto__.cljs$core$IFn$_invoke$arity$0 = com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto____0;\ncom$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto__.cljs$core$IFn$_invoke$arity$1 = com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto____1;\nreturn com$fulcrologic$fulcro$inspect$inspect_client$start_send_message_loop_$_state_machine__51725__auto__;\n})()\n;})(switch__51724__auto__,c__51860__auto__))\n})();\nvar state__51862__auto__ = (function (){var statearr_54321 = (f__51861__auto__.cljs$core$IFn$_invoke$arity$0 ? f__51861__auto__.cljs$core$IFn$_invoke$arity$0() : f__51861__auto__.call(null));\n(statearr_54321[(6)] = c__51860__auto__);\n\nreturn statearr_54321;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__51862__auto__);\n});})(c__51860__auto__))\n);\n\nreturn c__51860__auto__;\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.listen_local_messages = (function com$fulcrologic$fulcro$inspect$inspect_client$listen_local_messages(){\nreturn window.addEventListener(\"message\",(function (event){\nif(cljs.core.truth_((function (){var and__4120__auto__ = (event.source === window);\nif(and__4120__auto__){\nreturn goog.object.getValueByKeys(event,\"data\",\"fulcro-inspect-devtool-message\");\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar G__54329 = com.fulcrologic.fulcro.inspect.inspect_client.event_data(event);\nreturn (com.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message.cljs$core$IFn$_invoke$arity$1(G__54329) : com.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message.call(null,G__54329));\n} else {\nif(cljs.core.truth_((function (){var and__4120__auto__ = (event.source === window);\nif(and__4120__auto__){\nreturn goog.object.getValueByKeys(event,\"data\",\"fulcro-inspect-start-consume\");\n} else {\nreturn and__4120__auto__;\n}\n})())){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.start_send_message_loop();\n} else {\nreturn null;\n}\n}\n}),false);\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$transact_inspector_BANG_(var_args){\nvar G__54332 = arguments.length;\nswitch (G__54332) {\ncase 1:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (tx){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"transact-inspector\",\"fulcro.inspect.client/transact-inspector\",-905938352),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx\",\"fulcro.inspect.client/tx\",-815771134),tx], null));\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (ref,tx){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"transact-inspector\",\"fulcro.inspect.client/transact-inspector\",-905938352),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx-ref\",\"fulcro.inspect.client/tx-ref\",-1370560773),ref,new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx\",\"fulcro.inspect.client/tx\",-815771134),tx], null));\n});\n\ncom.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$lang$maxFixedArity = 2;\n\ncom.fulcrologic.fulcro.inspect.inspect_client.dispose_app = (function com$fulcrologic$fulcro$inspect$inspect_client$dispose_app(app_uuid){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_,cljs.core.dissoc,app_uuid);\n\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"dispose-app\",\"fulcro.inspect.client/dispose-app\",-574872452),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid]));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.set_active_app = (function com$fulcrologic$fulcro$inspect$inspect_client$set_active_app(app_uuid){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"set-active-app\",\"fulcro.inspect.client/set-active-app\",-2049837528),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid]));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.send_started_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$send_started_BANG_(app__$1,remote,tx_id,txn){\nvar start = (new Date());\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"history-id\",\"fulcro.inspect.ui.network/history-id\",702365090),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.inspect.ui.network\",\"request-start\",\"fulcro.inspect.ui.network/request-start\",-1415257884,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"remote\",\"fulcro.inspect.ui.network/remote\",-307593223),remote,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-id\",\"fulcro.inspect.ui.network/request-id\",-2031413204),tx_id,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-started-at\",\"fulcro.inspect.ui.network/request-started-at\",1582455117),start,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-edn\",\"fulcro.inspect.ui.network/request-edn\",-1638784885),txn], null),null,(1),null)))))], null));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.send_finished_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$send_finished_BANG_(app__$1,remote,tx_id,response){\nvar finished = (new Date());\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"history-id\",\"fulcro.inspect.ui.network/history-id\",702365090),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.inspect.ui.network\",\"request-finish\",\"fulcro.inspect.ui.network/request-finish\",817834789,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-id\",\"fulcro.inspect.ui.network/request-id\",-2031413204),tx_id,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-finished-at\",\"fulcro.inspect.ui.network/request-finished-at\",-1848991883),finished,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"response-edn\",\"fulcro.inspect.ui.network/response-edn\",221134354),response], null),null,(1),null)))))], null));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.send_failed_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$send_failed_BANG_(app__$1,tx_id,error){\nvar finished = (new Date());\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"history-id\",\"fulcro.inspect.ui.network/history-id\",702365090),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"fulcro.inspect.ui.network\",\"request-finish\",\"fulcro.inspect.ui.network/request-finish\",817834789,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-id\",\"fulcro.inspect.ui.network/request-id\",-2031413204),tx_id,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"request-finished-at\",\"fulcro.inspect.ui.network/request-finished-at\",-1848991883),finished,new cljs.core.Keyword(\"fulcro.inspect.ui.network\",\"error\",\"fulcro.inspect.ui.network/error\",36212909),error], null),null,(1),null)))))], null));\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.handle_devtool_message = (function com$fulcrologic$fulcro$inspect$inspect_client$handle_devtool_message(p__54383){\nvar map__54384 = p__54383;\nvar map__54384__$1 = (((((!((map__54384 == null))))?(((((map__54384.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54384.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54384):map__54384);\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54384__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar data = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54384__$1,new cljs.core.Keyword(null,\"data\",\"data\",-232669377));\nvar G__54390 = type;\nvar G__54390__$1 = (((G__54390 instanceof cljs.core.Keyword))?G__54390.fqn:null);\nswitch (G__54390__$1) {\ncase \"fulcro.inspect.client/request-page-apps\":\nvar seq__54391 = cljs.core.seq(cljs.core.vals(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_)));\nvar chunk__54392 = null;\nvar count__54393 = (0);\nvar i__54394 = (0);\nwhile(true){\nif((i__54394 < count__54393)){\nvar app__$1 = chunk__54392.cljs$core$IIndexed$_nth$arity$2(null,i__54394);\nvar state_54634 = com.fulcrologic.fulcro.inspect.inspect_client.app_state(app__$1);\nvar remote_names_54635 = com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1);\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"init-app\",\"fulcro.inspect.client/init-app\",-1984595648),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1),new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233),com.fulcrologic.fulcro.inspect.inspect_client.app_id(app__$1),new cljs.core.Keyword(\"fulcro.inspect.client\",\"remotes\",\"fulcro.inspect.client/remotes\",-2062632712),cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (seq__54391,chunk__54392,count__54393,i__54394,state_54634,remote_names_54635,app__$1,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (p1__54378_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),p1__54378_SHARP_);\n});})(seq__54391,chunk__54392,count__54393,i__54394,state_54634,remote_names_54635,app__$1,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,cljs.core.str),remote_names_54635),new cljs.core.Keyword(\"fulcro.inspect.client\",\"initial-state\",\"fulcro.inspect.client/initial-state\",1225829482),state_54634,new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-hash\",\"fulcro.inspect.client/state-hash\",-1488761756),cljs.core.hash(state_54634)]));\n\n\nvar G__54641 = seq__54391;\nvar G__54642 = chunk__54392;\nvar G__54643 = count__54393;\nvar G__54644 = (i__54394 + (1));\nseq__54391 = G__54641;\nchunk__54392 = G__54642;\ncount__54393 = G__54643;\ni__54394 = G__54644;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__54391);\nif(temp__5804__auto__){\nvar seq__54391__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__54391__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__54391__$1);\nvar G__54647 = cljs.core.chunk_rest(seq__54391__$1);\nvar G__54648 = c__4550__auto__;\nvar G__54649 = cljs.core.count(c__4550__auto__);\nvar G__54650 = (0);\nseq__54391 = G__54647;\nchunk__54392 = G__54648;\ncount__54393 = G__54649;\ni__54394 = G__54650;\ncontinue;\n} else {\nvar app__$1 = cljs.core.first(seq__54391__$1);\nvar state_54652 = com.fulcrologic.fulcro.inspect.inspect_client.app_state(app__$1);\nvar remote_names_54653 = com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1);\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"init-app\",\"fulcro.inspect.client/init-app\",-1984595648),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1),new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233),com.fulcrologic.fulcro.inspect.inspect_client.app_id(app__$1),new cljs.core.Keyword(\"fulcro.inspect.client\",\"remotes\",\"fulcro.inspect.client/remotes\",-2062632712),cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (seq__54391,chunk__54392,count__54393,i__54394,state_54652,remote_names_54653,app__$1,seq__54391__$1,temp__5804__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (p1__54378_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),p1__54378_SHARP_);\n});})(seq__54391,chunk__54392,count__54393,i__54394,state_54652,remote_names_54653,app__$1,seq__54391__$1,temp__5804__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,cljs.core.str),remote_names_54653),new cljs.core.Keyword(\"fulcro.inspect.client\",\"initial-state\",\"fulcro.inspect.client/initial-state\",1225829482),state_54652,new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-hash\",\"fulcro.inspect.client/state-hash\",-1488761756),cljs.core.hash(state_54652)]));\n\n\nvar G__54654 = cljs.core.next(seq__54391__$1);\nvar G__54655 = null;\nvar G__54656 = (0);\nvar G__54657 = (0);\nseq__54391 = G__54654;\nchunk__54392 = G__54655;\ncount__54393 = G__54656;\ni__54394 = G__54657;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n\nbreak;\ncase \"fulcro.inspect.client/reset-app-state\":\nvar map__54405 = data;\nvar map__54405__$1 = (((((!((map__54405 == null))))?(((((map__54405.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54405.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54405):map__54405);\nvar target_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54405__$1,new cljs.core.Keyword(null,\"target-state\",\"target-state\",-682429993));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54405__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar app__$1 = temp__5802__auto__;\nvar render_BANG_ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"schedule-render!\",\"schedule-render!\",2095050350));\nif(cljs.core.truth_(target_state)){\nvar target_state_54661__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(target_state,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid);\ncljs.core.reset_BANG_(com.fulcrologic.fulcro.inspect.inspect_client.state_atom(app__$1),target_state_54661__$1);\n} else {\n}\n\nvar G__54414 = app__$1;\nvar G__54415 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683),true], null);\nreturn (render_BANG_.cljs$core$IFn$_invoke$arity$2 ? render_BANG_.cljs$core$IFn$_invoke$arity$2(G__54414,G__54415) : render_BANG_.call(null,G__54414,G__54415));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,198,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5802__auto__,map__54405,map__54405__$1,target_state,app_uuid,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Reset app on invalid uuid\",app_uuid], null);\n});})(temp__5802__auto__,map__54405,map__54405__$1,target_state,app_uuid,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,1044886739);\n}\n\nbreak;\ncase \"fulcro.inspect.client/transact\":\nvar map__54418 = data;\nvar map__54418__$1 = (((((!((map__54418 == null))))?(((((map__54418.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54418.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54418):map__54418);\nvar tx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54418__$1,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418));\nvar tx_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54418__$1,new cljs.core.Keyword(null,\"tx-ref\",\"tx-ref\",-216104949));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54418__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar temp__5802__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar app__$1 = temp__5802__auto__;\nif(cljs.core.truth_(tx_ref)){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.comp_transact_BANG_(app__$1,tx,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),tx_ref], null));\n} else {\nreturn com.fulcrologic.fulcro.inspect.inspect_client.comp_transact_BANG_(app__$1,tx,cljs.core.PersistentArrayMap.EMPTY);\n}\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,207,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5802__auto__,map__54418,map__54418__$1,tx,tx_ref,app_uuid,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Transact on invalid uuid\",app_uuid], null);\n});})(temp__5802__auto__,map__54418,map__54418__$1,tx,tx_ref,app_uuid,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,-702417735);\n}\n\nbreak;\ncase \"fulcro.inspect.client/pick-element\":\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,210,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pick Element Not implemented for Inspect v3\"], null);\n});})(G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,1172745206);\n\nbreak;\ncase \"fulcro.inspect.client/show-dom-preview\":\nvar b2__46796__auto__ = data;\nif(cljs.core.truth_(b2__46796__auto__)){\nvar map__54431 = b2__46796__auto__;\nvar map__54431__$1 = (((((!((map__54431 == null))))?(((((map__54431.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54431.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54431):map__54431);\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54431__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar b2__46796__auto____$1 = (function (){var G__54434 = cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_);\nif((G__54434 == null)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__54434,app_uuid);\n}\n})();\nif(cljs.core.truth_(b2__46796__auto____$1)){\nvar app__$1 = b2__46796__auto____$1;\nvar b2__46796__auto____$2 = com.fulcrologic.fulcro.inspect.inspect_client.db_from_history(app__$1,new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-hash\",\"fulcro.inspect.client/state-hash\",-1488761756).cljs$core$IFn$_invoke$arity$1(data));\nif(cljs.core.truth_(b2__46796__auto____$2)){\nvar historical_state = b2__46796__auto____$2;\nvar b2__46796__auto____$3 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(app__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(historical_state));\nif(cljs.core.truth_(b2__46796__auto____$3)){\nvar historical_app = b2__46796__auto____$3;\nvar b2__46796__auto____$4 = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"render!\",\"render!\",-1848688504));\nif(cljs.core.truth_(b2__46796__auto____$4)){\nvar render_BANG_ = b2__46796__auto____$4;\nvar G__54438 = historical_app;\nvar G__54439 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683),true], null);\nreturn (render_BANG_.cljs$core$IFn$_invoke$arity$2 ? render_BANG_.cljs$core$IFn$_invoke$arity$2(G__54438,G__54439) : render_BANG_.call(null,G__54438,G__54439));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,220,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (b2__46796__auto____$4,historical_app,b2__46796__auto____$3,historical_state,b2__46796__auto____$2,app__$1,b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to find app/state for preview.\"], null);\n});})(b2__46796__auto____$4,historical_app,b2__46796__auto____$3,historical_state,b2__46796__auto____$2,app__$1,b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,1671351567);\n}\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,220,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (b2__46796__auto____$3,historical_state,b2__46796__auto____$2,app__$1,b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to find app/state for preview.\"], null);\n});})(b2__46796__auto____$3,historical_state,b2__46796__auto____$2,app__$1,b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,-1393480598);\n}\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,220,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (b2__46796__auto____$2,app__$1,b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to find app/state for preview.\"], null);\n});})(b2__46796__auto____$2,app__$1,b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,-1125979987);\n}\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,220,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to find app/state for preview.\"], null);\n});})(b2__46796__auto____$1,map__54431,map__54431__$1,app_uuid,b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,-1908479466);\n}\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,220,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unable to find app/state for preview.\"], null);\n});})(b2__46796__auto__,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,697309849);\n}\n\nbreak;\ncase \"fulcro.inspect.client/hide-dom-preview\":\nvar b2__46796__auto__ = data;\nif(cljs.core.truth_(b2__46796__auto__)){\nvar map__54445 = b2__46796__auto__;\nvar map__54445__$1 = (((((!((map__54445 == null))))?(((((map__54445.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54445.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54445):map__54445);\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54445__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar b2__46796__auto____$1 = (function (){var G__54449 = cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_);\nif((G__54449 == null)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__54449,app_uuid);\n}\n})();\nif(cljs.core.truth_(b2__46796__auto____$1)){\nvar app__$1 = b2__46796__auto____$1;\nvar b2__46796__auto____$2 = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"render!\",\"render!\",-1848688504));\nif(cljs.core.truth_(b2__46796__auto____$2)){\nvar render_BANG_ = b2__46796__auto____$2;\nvar G__54451 = app__$1;\nvar G__54452 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683),true], null);\nreturn (render_BANG_.cljs$core$IFn$_invoke$arity$2 ? render_BANG_.cljs$core$IFn$_invoke$arity$2(G__54451,G__54452) : render_BANG_.call(null,G__54451,G__54452));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n\nbreak;\ncase \"fulcro.inspect.client/network-request\":\nvar map__54455 = data;\nvar map__54455__$1 = (((((!((map__54455 == null))))?(((((map__54455.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54455.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54455):map__54455);\nvar remote_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54455__$1,new cljs.core.Keyword(\"fulcro.inspect.client\",\"remote\",\"fulcro.inspect.client/remote\",-306964848));\nvar query = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54455__$1,new cljs.core.Keyword(null,\"query\",\"query\",-1288509510));\nvar msg_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54455__$1,new cljs.core.Keyword(\"fulcro.inspect.ui-parser\",\"msg-id\",\"fulcro.inspect.ui-parser/msg-id\",-467621998));\nvar app_uuid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54455__$1,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-uuid\",\"fulcro.inspect.core/app-uuid\",-1096445491));\nvar b2__46796__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_),app_uuid);\nif(cljs.core.truth_(b2__46796__auto__)){\nvar app__$1 = b2__46796__auto__;\nvar b2__46796__auto____$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1),remote_name);\nif(cljs.core.truth_(b2__46796__auto____$1)){\nvar remote = b2__46796__auto____$1;\nvar b2__46796__auto____$2 = new cljs.core.Keyword(null,\"transmit!\",\"transmit!\",-107149039).cljs$core$IFn$_invoke$arity$1(remote);\nif(cljs.core.truth_(b2__46796__auto____$2)){\nvar transmit_BANG_ = b2__46796__auto____$2;\nvar b2__46796__auto____$3 = edn_query_language.core.query__GT_ast(query);\nif(cljs.core.truth_(b2__46796__auto____$3)){\nvar ast = b2__46796__auto____$3;\nvar b2__46796__auto____$4 = cljs.core.random_uuid();\nif(cljs.core.truth_(b2__46796__auto____$4)){\nvar tx_id = b2__46796__auto____$4;\ncom.fulcrologic.fulcro.inspect.inspect_client.send_started_BANG_(app__$1,remote_name,tx_id,query);\n\nvar G__54469 = remote;\nvar G__54470 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"id\",\"com.fulcrologic.fulcro.algorithms.tx-processing/id\",1199810423),tx_id,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"ast\",\"com.fulcrologic.fulcro.algorithms.tx-processing/ast\",1718830373),ast,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"idx\",\"com.fulcrologic.fulcro.algorithms.tx-processing/idx\",-1121773698),(0),new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"update-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/update-handler\",-1256285755),cljs.core.identity,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"result-handler\",\"com.fulcrologic.fulcro.algorithms.tx-processing/result-handler\",-114902209),((function (G__54469,tx_id,b2__46796__auto____$4,ast,b2__46796__auto____$3,transmit_BANG_,b2__46796__auto____$2,remote,b2__46796__auto____$1,app__$1,b2__46796__auto__,map__54455,map__54455__$1,remote_name,query,msg_id,app_uuid,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (p__54472){\nvar map__54473 = p__54472;\nvar map__54473__$1 = (((((!((map__54473 == null))))?(((((map__54473.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54473.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54473):map__54473);\nvar result = map__54473__$1;\nvar body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54473__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar error_QMARK__54699 = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$1,new cljs.core.Keyword(null,\"remote-error?\",\"remote-error?\",-391127497));\nif(cljs.core.truth_((error_QMARK__54699.cljs$core$IFn$_invoke$arity$1 ? error_QMARK__54699.cljs$core$IFn$_invoke$arity$1(result) : error_QMARK__54699.call(null,result)))){\ncom.fulcrologic.fulcro.inspect.inspect_client.send_failed_BANG_(app__$1,remote_name,result);\n} else {\ncom.fulcrologic.fulcro.inspect.inspect_client.send_finished_BANG_(app__$1,remote_name,tx_id,body);\n}\n\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"message-response\",\"fulcro.inspect.client/message-response\",587955053),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"fulcro.inspect.ui-parser\",\"msg-id\",\"fulcro.inspect.ui-parser/msg-id\",-467621998),msg_id,new cljs.core.Keyword(\"fulcro.inspect.ui-parser\",\"msg-response\",\"fulcro.inspect.ui-parser/msg-response\",1721295840),body], null));\n});})(G__54469,tx_id,b2__46796__auto____$4,ast,b2__46796__auto____$3,transmit_BANG_,b2__46796__auto____$2,remote,b2__46796__auto____$1,app__$1,b2__46796__auto__,map__54455,map__54455__$1,remote_name,query,msg_id,app_uuid,G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n], null);\nreturn (transmit_BANG_.cljs$core$IFn$_invoke$arity$2 ? transmit_BANG_.cljs$core$IFn$_invoke$arity$2(G__54469,G__54470) : transmit_BANG_.call(null,G__54469,G__54470));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n\nbreak;\ncase \"fulcro.inspect.client/console-log\":\nvar map__54484 = data;\nvar map__54484__$1 = (((((!((map__54484 == null))))?(((((map__54484.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54484.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54484):map__54484);\nvar log = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54484__$1,new cljs.core.Keyword(null,\"log\",\"log\",-1595516004));\nvar log_js = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54484__$1,new cljs.core.Keyword(null,\"log-js\",\"log-js\",-1565471667));\nvar warn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54484__$1,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552));\nvar error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54484__$1,new cljs.core.Keyword(null,\"error\",\"error\",-978969032));\nif(cljs.core.truth_(log)){\nreturn console.log(log);\n} else {\nif(cljs.core.truth_(log_js)){\nreturn console.log(cljs.core.clj__GT_js(log_js));\n} else {\nif(cljs.core.truth_(warn)){\nreturn console.warn(warn);\n} else {\nif(cljs.core.truth_(error)){\nreturn console.error(error);\n} else {\nreturn null;\n}\n}\n}\n}\n\nbreak;\ncase \"fulcro.inspect.client/check-client-version\":\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"client-version\",\"fulcro.inspect.client/client-version\",728119531),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"version\",\"version\",425292698),\"2.2.5\"], null));\n\nbreak;\ndefault:\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,271,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (G__54390,G__54390__$1,map__54384,map__54384__$1,type,data){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unknown message\",type], null);\n});})(G__54390,G__54390__$1,map__54384,map__54384__$1,type,data))\n,null)),null,1081609898);\n\n}\n});\ncom.fulcrologic.fulcro.inspect.inspect_client.install = (function com$fulcrologic$fulcro$inspect$inspect_client$install(_){\ndocument.documentElement.setAttribute(\"__fulcro-inspect-remote-installed__\",true);\n\nif(cljs.core.truth_(cljs.core.deref(com.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_))){\nreturn null;\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.inspect.inspect-client\",null,280,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Installing Fulcro 3.x Inspect\",cljs.core.PersistentArrayMap.EMPTY], null);\n}),null)),null,1599869829);\n\ncljs.core.reset_BANG_(com.fulcrologic.fulcro.inspect.inspect_client.started_QMARK__STAR_,true);\n\nreturn com.fulcrologic.fulcro.inspect.inspect_client.listen_local_messages();\n}\n});\n/**\n * Register the application with Inspect, if it is available.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.app_started_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$app_started_BANG_(app__$1){\nvar networking = com.fulcrologic.fulcro.inspect.inspect_client.remotes(app__$1);\nvar state_STAR_ = com.fulcrologic.fulcro.inspect.inspect_client.state_atom(app__$1);\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.fulcro_app_id(app__$1);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(com.fulcrologic.fulcro.inspect.inspect_client.apps_STAR_,cljs.core.assoc,app_uuid,app__$1);\n\ncom.fulcrologic.fulcro.inspect.inspect_client.update_state_history(app__$1,cljs.core.deref(state_STAR_));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state_STAR_,cljs.core.assoc,com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid);\n\ncom.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"init-app\",\"fulcro.inspect.client/init-app\",-1984595648),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.core\",\"app-id\",\"fulcro.inspect.core/app-id\",-1444290233),com.fulcrologic.fulcro.inspect.inspect_client.app_id(app__$1),new cljs.core.Keyword(\"fulcro.inspect.client\",\"remotes\",\"fulcro.inspect.client/remotes\",-2062632712),cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(((function (networking,state_STAR_,app_uuid){\nreturn (function (p1__54492_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"remote\",\"remote\",-1593576576),p1__54492_SHARP_);\n});})(networking,state_STAR_,app_uuid))\n,cljs.core.str),cljs.core.keys(networking)),new cljs.core.Keyword(\"fulcro.inspect.client\",\"initial-state\",\"fulcro.inspect.client/initial-state\",1225829482),cljs.core.deref(state_STAR_),new cljs.core.Keyword(\"fulcro.inspect.client\",\"state-hash\",\"fulcro.inspect.client/state-hash\",-1488761756),cljs.core.hash(cljs.core.deref(state_STAR_))]));\n\nreturn cljs.core.add_watch(state_STAR_,app_uuid,((function (networking,state_STAR_,app_uuid){\nreturn (function (p1__54495_SHARP_,p2__54496_SHARP_,p3__54493_SHARP_,p4__54494_SHARP_){\nreturn com.fulcrologic.fulcro.inspect.inspect_client.db_changed_BANG_(app__$1,p3__54493_SHARP_,p4__54494_SHARP_);\n});})(networking,state_STAR_,app_uuid))\n);\n});\n/**\n * Notify inspect that a transaction finished.\n * \n * app - The app\n * env - The mutation env that completed.\n */\ncom.fulcrologic.fulcro.inspect.inspect_client.optimistic_action_finished_BANG_ = (function com$fulcrologic$fulcro$inspect$inspect_client$optimistic_action_finished_BANG_(app__$1,p__54508,p__54509){\nvar map__54510 = p__54508;\nvar map__54510__$1 = (((((!((map__54510 == null))))?(((((map__54510.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54510.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54510):map__54510);\nvar component = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54510__$1,new cljs.core.Keyword(null,\"component\",\"component\",1555936782));\nvar ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54510__$1,new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54510__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar options = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54510__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420));\nvar map__54511 = p__54509;\nvar map__54511__$1 = (((((!((map__54511 == null))))?(((((map__54511.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__54511.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__54511):map__54511);\nvar tx_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54511__$1,new cljs.core.Keyword(null,\"tx-id\",\"tx-id\",638275288));\nvar tx = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54511__$1,new cljs.core.Keyword(null,\"tx\",\"tx\",466630418));\nvar state_before = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__54511__$1,new cljs.core.Keyword(null,\"state-before\",\"state-before\",759087843));\nvar component_name = com.fulcrologic.fulcro.inspect.inspect_client.get_component_name(component);\nvar tx__$1 = (function (){var G__54515 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(\"fulcro.inspect.ui.transactions\",\"tx-id\",\"fulcro.inspect.ui.transactions/tx-id\",315271198),tx_id,new cljs.core.Keyword(\"fulcro.history\",\"client-time\",\"fulcro.history/client-time\",1879420278),(new Date()),new cljs.core.Keyword(\"fulcro.history\",\"tx\",\"fulcro.history/tx\",1485693993),tx,new cljs.core.Keyword(\"fulcro.history\",\"db-before-hash\",\"fulcro.history/db-before-hash\",-1020674495),cljs.core.hash(state_before),new cljs.core.Keyword(\"fulcro.history\",\"db-after-hash\",\"fulcro.history/db-after-hash\",-1603617752),cljs.core.hash(cljs.core.deref(state)),new cljs.core.Keyword(\"fulcro.history\",\"network-sends\",\"fulcro.history/network-sends\",-234790789),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(\"com.fulcrologic.fulcro.algorithms.tx-processing\",\"options\",\"com.fulcrologic.fulcro.algorithms.tx-processing/options\",2016767420),options], null);\nvar G__54515__$1 = (cljs.core.truth_(component_name)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__54515,new cljs.core.Keyword(null,\"component\",\"component\",1555936782),component_name):G__54515);\nif(cljs.core.truth_(ref)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__54515__$1,new cljs.core.Keyword(null,\"ident-ref\",\"ident-ref\",663643478),ref);\n} else {\nreturn G__54515__$1;\n}\n})();\nvar app_uuid = com.fulcrologic.fulcro.inspect.inspect_client.app_uuid(app__$1);\nreturn com.fulcrologic.fulcro.inspect.inspect_client.post_message(new cljs.core.Keyword(\"fulcro.inspect.client\",\"new-client-transaction\",\"fulcro.inspect.client/new-client-transaction\",-1086637148),cljs.core.PersistentArrayMap.createAsIfByAssoc([com.fulcrologic.fulcro.inspect.inspect_client.app_uuid_key,app_uuid,new cljs.core.Keyword(\"fulcro.inspect.client\",\"tx\",\"fulcro.inspect.client/tx\",-815771134),tx__$1]));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions used by Fulcro to talk to Fulcro Inspect.","~:file","com/fulcrologic/fulcro/inspect/inspect_client.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",50],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core","~$clojure.test","~$cljs.test","~$clojure.spec.test.alpha","~$cljs.spec.test.alpha","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$ilet",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^6","Like `clojure.core/let`, but elides the block if Inspect isn't enabled.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",347,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","~:name","~$com.fulcrologic.fulcro.inspect.inspect-client/ilet","~:ns","~$com.fulcrologic.fulcro.inspect.inspect-client","~:macro",true],"~$ido",["^ ","^R",["^S",[["~$&","^U"]]],"^6","Wrap a block of code that will only run if Inspect is enabled.  Code in these blocks will also be removed via\n  DCE in Closure.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",327,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/ido","^X","^Y","^Z",true]],"^V","^Y","~:op","^X","~:imports",null,"~:requires",["^ ","~$ah","~$com.fulcrologic.fulcro.algorithms.lookup","~$edn-query-language.core","^16","~$encode","~$com.fulcrologic.fulcro.inspect.transit","~$log","~$taoensso.timbre","~$diff","~$com.fulcrologic.fulcro.inspect.diff","~$eql","^16","~$async","^L","^18","^18","^B","^B","~$gobj","~$goog.object","~$goog","^1A","^1@","^1@","^L","^L","~$encore","~$taoensso.encore","^15","^15","^1:","^1:","^1C","^1C","^1<","^1<"],"~:seen",["^O",["~:require","~:require-macros"]],"~:uses",null,"^1F",["^ ","^Y","^Y","^B","^B","^19","^1:","^1>","^L","^L","^L","^1B","^1C","^1:","^1:","^1C","^1C"],"~:form",["^S",["~$ns","^Y","Functions used by Fulcro to talk to Fulcro Inspect.",["^S",["^1F","^Y"]],["^S",["^1E",["^16","~:as","^1="],["^15","^1J","^14"],["^1@","^1J","^1?"],["^1<","^1J","^1;"],["^18","^1J","^17"],["^L","^1J","^1>"],["^1C","^1J","^1B"],["^1:","^1J","^19"]]]]],"~:flags",["^ ","^1F",["^O",[]],"^1E",["^O",[]]],"~:js-deps",["^ "],"~:deps",["^1A","^B","^16","^15","^1@","^1<","^18","^L","^1C","^1:"]],"^X","^Y","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/inspect/inspect_client.cljc"],"~:compiled-at",1705355274109,"~:resource-name","com/fulcrologic/fulcro/inspect/inspect_client.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.inspect.inspect-client\n  \"Functions used by Fulcro to talk to Fulcro Inspect.\"\n  #?(:cljs (:require-macros com.fulcrologic.fulcro.inspect.inspect-client))\n  (:require\n    [edn-query-language.core :as eql]\n    [com.fulcrologic.fulcro.algorithms.lookup :as ah]\n    #?@(:cljs [[goog.object :as gobj]\n               [com.fulcrologic.fulcro.inspect.diff :as diff]\n               [com.fulcrologic.fulcro.inspect.transit :as encode]\n               [cljs.core.async :as async]])\n    [taoensso.encore :as encore]\n    [taoensso.timbre :as log]))\n\n#?(:cljs (goog-define INSPECT false))\n\n(declare handle-devtool-message)\n(defonce started?* (atom false))\n(defonce tools-app* (atom nil))\n(defonce apps* (atom {}))\n(def app-uuid-key :fulcro.inspect.core/app-uuid)\n\n(defonce send-ch #?(:clj nil :cljs (async/chan (async/dropping-buffer 50000))))\n(defn post-message [type data]\n  #?(:cljs (async/put! send-ch [type data])))\n\n(defn cljs?\n  \"Returns true when env is a cljs macro &env\"\n  [env]\n  (boolean (:ns env)))\n\n(defn- isoget\n  \"Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n  `gobj/get`.\"\n  ([obj k] (isoget obj k nil))\n  ([obj k default]\n   #?(:clj  (get obj k default)\n      :cljs (or (gobj/get obj (some-> k (name))) default))))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; Helpers so we don't have to include other nses\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defn app-state [app] (some-> app :com.fulcrologic.fulcro.application/state-atom deref))\n(defn runtime-atom [app] (some-> app :com.fulcrologic.fulcro.application/runtime-atom))\n(defn state-atom [app] (some-> app :com.fulcrologic.fulcro.application/state-atom))\n(defn app-uuid [app] (some-> app :com.fulcrologic.fulcro.application/state-atom deref (get app-uuid-key)))\n(defn remotes [app] (some-> (runtime-atom app) deref :com.fulcrologic.fulcro.application/remotes))\n(defn app-id [app] (some-> (app-state app) :fulcro.inspect.core/app-id))\n(defn fulcro-app-id [app] (:com.fulcrologic.fulcro.application/id app))\n(defn get-component-name [component] (when component (some-> (isoget component :fulcro$options) :displayName)))\n(defn comp-transact! [app tx options]\n  (let [tx! (ah/app-algorithm app :tx!)]\n    (tx! app tx options)))\n\n\n(def MAX_HISTORY_SIZE 100)\n\n(defn- fixed-size-assoc [size db key value]\n  (let [{:fulcro.inspect.client/keys [history] :as db'}\n        (-> db\n          (assoc key value)\n          (update :fulcro.inspect.client/history (fnil conj []) key))]\n    (if (> (count history) size)\n      (-> db'\n        (dissoc (first history))\n        (update :fulcro.inspect.client/history #(vec (next %))))\n      db')))\n\n(defn- update-state-history\n  \"Record a snapshot of history on the app itself for inspect to reference via events to do things like preview\n   history.\"\n  [app state]\n  (swap! (runtime-atom app) update :fulcro.inspect.client/state-history\n    #(fixed-size-assoc MAX_HISTORY_SIZE % (hash state) state)))\n\n(defn db-from-history [app state-hash]\n  (some-> (runtime-atom app) deref :fulcro.inspect.client/state-history (get state-hash)))\n\n(defn db-changed!\n  \"Notify Inspect that the database changed\"\n  [app old-state new-state]\n  #?(:cljs\n     (let [app-uuid (app-uuid app)]\n       (update-state-history app new-state)\n       (let [diff (diff/diff old-state new-state)]\n         (post-message :fulcro.inspect.client/db-update {app-uuid-key                           app-uuid\n                                                         :fulcro.inspect.client/prev-state-hash (hash old-state)\n                                                         :fulcro.inspect.client/state-hash      (hash new-state)\n                                                         :fulcro.inspect.client/state-delta     diff})))))\n\n(defn event-data [event]\n  #?(:cljs (some-> event (gobj/getValueByKeys \"data\" \"fulcro-inspect-devtool-message\") encode/read)))\n\n(defn start-send-message-loop []\n  #?(:cljs\n     (async/go-loop []\n       (when-let [[type data] (async/<! send-ch)]\n         (.postMessage js/window (clj->js {:fulcro-inspect-remote-message (encode/write {:type type :data data :timestamp (js/Date.)})}) \"*\")\n         (recur)))))\n\n(defn listen-local-messages []\n  #?(:cljs\n     (.addEventListener js/window \"message\"\n       (fn [event]\n         (cond\n           (and (identical? (.-source event) js/window)\n             (gobj/getValueByKeys event \"data\" \"fulcro-inspect-devtool-message\"))\n           (handle-devtool-message (event-data event))\n\n           (and (identical? (.-source event) js/window)\n             (gobj/getValueByKeys event \"data\" \"fulcro-inspect-start-consume\"))\n           (start-send-message-loop)))\n       false)))\n\n(defn transact-inspector!\n  ([tx]\n   (post-message :fulcro.inspect.client/transact-inspector {:fulcro.inspect.client/tx tx}))\n  ([ref tx]\n   (post-message :fulcro.inspect.client/transact-inspector {:fulcro.inspect.client/tx-ref ref :fulcro.inspect.client/tx tx})))\n\n(defn dispose-app [app-uuid]\n  (swap! apps* dissoc app-uuid)\n  (post-message :fulcro.inspect.client/dispose-app {app-uuid-key app-uuid}))\n\n(defn set-active-app [app-uuid]\n  (post-message :fulcro.inspect.client/set-active-app {app-uuid-key app-uuid}))\n\n#_(defn inspect-app [app]\n    #?(:cljs\n       (let [networking (remotes app)\n             state*     (state-atom app)\n             app-uuid   (random-uuid)]\n\n         (swap! apps* assoc app-uuid app)\n         #_(update-state-history app @state*)\n\n         (post-message :fulcro.inspect.client/init-app {app-uuid-key                         app-uuid\n                                                        :fulcro.inspect.core/app-id          (app-id app)\n                                                        :fulcro.inspect.client/remotes       (sort-by (juxt #(not= :remote %) str) (keys networking))\n                                                        :fulcro.inspect.client/initial-state @state*\n                                                        :fulcro.inspect.client/state-hash    (hash @state*)})\n\n         (add-watch state* app-uuid #(db-update app app-uuid %3 %4))\n\n         (swap! state* assoc app-uuid-key app-uuid)\n\n         app)))\n\n(defn send-started! [app remote tx-id txn]\n  #?(:cljs\n     (let [start    (js/Date.)\n           app-uuid (app-uuid app)]\n       (transact-inspector! [:fulcro.inspect.ui.network/history-id [app-uuid-key app-uuid]]\n         [`(fulcro.inspect.ui.network/request-start ~{:fulcro.inspect.ui.network/remote             remote\n                                                      :fulcro.inspect.ui.network/request-id         tx-id\n                                                      :fulcro.inspect.ui.network/request-started-at start\n                                                      :fulcro.inspect.ui.network/request-edn        txn})]))))\n\n(defn send-finished! [app remote tx-id response]\n  #?(:cljs\n     (let [finished (js/Date.)\n           app-uuid (app-uuid app)]\n       (transact-inspector! [:fulcro.inspect.ui.network/history-id [app-uuid-key app-uuid]]\n         [`(fulcro.inspect.ui.network/request-finish ~{:fulcro.inspect.ui.network/request-id          tx-id\n                                                       :fulcro.inspect.ui.network/request-finished-at finished\n                                                       :fulcro.inspect.ui.network/response-edn        response})]))))\n\n(defn send-failed! [app tx-id error]\n  #?(:cljs\n     (let [finished (js/Date.)\n           app-uuid (app-uuid app)]\n       (transact-inspector! [:fulcro.inspect.ui.network/history-id [app-uuid-key app-uuid]]\n         [`(fulcro.inspect.ui.network/request-finish ~{:fulcro.inspect.ui.network/request-id          tx-id\n                                                       :fulcro.inspect.ui.network/request-finished-at finished\n                                                       :fulcro.inspect.ui.network/error               error})]))))\n(defn handle-devtool-message [{:keys [type data]}]\n  #?(:cljs\n     (case type\n       :fulcro.inspect.client/request-page-apps\n       (do\n         (doseq [app (vals @apps*)]\n           (let [state        (app-state app)\n                 remote-names (remotes app)]\n             (post-message :fulcro.inspect.client/init-app {app-uuid-key                         (app-uuid app)\n                                                            :fulcro.inspect.core/app-id          (app-id app)\n                                                            :fulcro.inspect.client/remotes       (sort-by (juxt #(not= :remote %) str) remote-names)\n                                                            :fulcro.inspect.client/initial-state state\n                                                            :fulcro.inspect.client/state-hash    (hash state)}))))\n\n       :fulcro.inspect.client/reset-app-state\n       (let [{:keys                     [target-state]\n              :fulcro.inspect.core/keys [app-uuid]} data]\n         (if-let [app (get @apps* app-uuid)]\n           (let [render! (ah/app-algorithm app :schedule-render!)]\n             (if target-state\n               (let [target-state (assoc target-state app-uuid-key app-uuid)]\n                 (reset! (state-atom app) target-state)))\n             (render! app {:force-root? true}))\n           (log/info \"Reset app on invalid uuid\" app-uuid)))\n\n       :fulcro.inspect.client/transact\n       (let [{:keys                     [tx tx-ref]\n              :fulcro.inspect.core/keys [app-uuid]} data]\n         (if-let [app (get @apps* app-uuid)]\n           (if tx-ref\n             (comp-transact! app tx {:ref tx-ref})\n             (comp-transact! app tx {}))\n           (log/error \"Transact on invalid uuid\" app-uuid)))\n\n       :fulcro.inspect.client/pick-element\n       (log/error \"Pick Element Not implemented for Inspect v3\")\n\n       :fulcro.inspect.client/show-dom-preview\n       (encore/if-let [{:fulcro.inspect.core/keys [app-uuid]} data\n                       app              (some-> @apps* (get app-uuid))\n                       historical-state (db-from-history app (:fulcro.inspect.client/state-hash data))\n                       historical-app   (assoc app :com.fulcrologic.fulcro.application/state-atom (atom historical-state))\n                       render!          (ah/app-algorithm app :render!)]\n         (do\n           (render! historical-app {:force-root? true}))\n         (log/error \"Unable to find app/state for preview.\"))\n\n       :fulcro.inspect.client/hide-dom-preview\n       (encore/when-let [{:fulcro.inspect.core/keys [app-uuid]} data\n                         app (some-> @apps* (get app-uuid))\n                         render! (ah/app-algorithm app :render!)]\n         (render! app {:force-root? true}))\n\n       :fulcro.inspect.client/network-request\n       (let [{:keys                          [query]\n              remote-name                    :fulcro.inspect.client/remote\n              :fulcro.inspect.ui-parser/keys [msg-id]\n              :fulcro.inspect.core/keys      [app-uuid]} data]\n         (encore/when-let [app (get @apps* app-uuid)\n                           remote (get (remotes app) remote-name)\n                           transmit! (-> remote :transmit!)\n                           ast (eql/query->ast query)\n                           tx-id (random-uuid)]\n           (send-started! app remote-name tx-id query)\n           (transmit! remote {:com.fulcrologic.fulcro.algorithms.tx-processing/id             tx-id\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/ast            ast\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/idx            0\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/options        {}\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/update-handler identity\n                              :com.fulcrologic.fulcro.algorithms.tx-processing/result-handler (fn [{:keys [body] :as result}]\n                                                                                                (let [error? (ah/app-algorithm app :remote-error?)]\n                                                                                                  (if (error? result)\n                                                                                                    (send-failed! app remote-name result)\n                                                                                                    (send-finished! app remote-name tx-id body)))\n                                                                                                (post-message :fulcro.inspect.client/message-response\n                                                                                                  {:fulcro.inspect.ui-parser/msg-id       msg-id\n                                                                                                   :fulcro.inspect.ui-parser/msg-response body}))})))\n\n       :fulcro.inspect.client/console-log\n       (let [{:keys [log log-js warn error]} data]\n         (cond\n           log\n           (js/console.log log)\n\n           log-js\n           (js/console.log (clj->js log-js))\n\n           warn\n           (js/console.warn warn)\n\n           error\n           (js/console.error error)))\n\n       :fulcro.inspect.client/check-client-version\n       (post-message :fulcro.inspect.client/client-version {:version \"2.2.5\"})\n\n       (log/error \"Unknown message\" type))))\n\n\n(defn install [_]\n  #?(:cljs\n     (do\n       (js/document.documentElement.setAttribute \"__fulcro-inspect-remote-installed__\" true)\n\n       (when-not @started?*\n         (log/info \"Installing Fulcro 3.x Inspect\" {})\n\n         (reset! started?* true)\n\n         (listen-local-messages)))))\n\n\n(defn app-started!\n  \"Register the application with Inspect, if it is available.\"\n  [app]\n  #?(:cljs\n     (let [networking (remotes app)\n           state*     (state-atom app)\n           app-uuid   (fulcro-app-id app)]\n       (swap! apps* assoc app-uuid app)\n       (update-state-history app @state*)\n       (swap! state* assoc app-uuid-key app-uuid)\n       (post-message :fulcro.inspect.client/init-app {app-uuid-key                         app-uuid\n                                                      :fulcro.inspect.core/app-id          (app-id app)\n                                                      :fulcro.inspect.client/remotes       (sort-by (juxt #(not= :remote %) str) (keys networking))\n                                                      :fulcro.inspect.client/initial-state @state*\n                                                      :fulcro.inspect.client/state-hash    (hash @state*)})\n       (add-watch state* app-uuid #(db-changed! app %3 %4)))))\n\n(defn optimistic-action-finished!\n  \"Notify inspect that a transaction finished.\n\n   app - The app\n   env - The mutation env that completed.\"\n  [app\n   {:keys [component ref state com.fulcrologic.fulcro.algorithms.tx-processing/options]}\n   {:keys [tx-id tx state-before]}]\n  #?(:cljs\n     (let [component-name (get-component-name component)\n           tx             (cond-> {:fulcro.inspect.ui.transactions/tx-id                    tx-id\n                                   :fulcro.history/client-time                              (js/Date.)\n                                   :fulcro.history/tx                                       tx\n                                   :fulcro.history/db-before-hash                           (hash state-before)\n                                   :fulcro.history/db-after-hash                            (hash @state)\n                                   :fulcro.history/network-sends                            []\n                                   :com.fulcrologic.fulcro.algorithms.tx-processing/options options}\n                            component-name (assoc :component component-name)\n                            ref (assoc :ident-ref ref))\n           app-uuid       (app-uuid app)]\n       (post-message :fulcro.inspect.client/new-client-transaction {app-uuid-key              app-uuid\n                                                                    :fulcro.inspect.client/tx tx}))))\n\n(defmacro ido\n  \"Wrap a block of code that will only run if Inspect is enabled.  Code in these blocks will also be removed via\n  DCE in Closure.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\\\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\\\" true}\n  \"\n  [& body]\n  (when (cljs? &env)\n    `(when (or ~'goog.DEBUG INSPECT)\n       (try\n         ~@body\n         (catch :default ~'e)))))\n\n(defmacro ilet\n  \"Like `clojure.core/let`, but elides the block if Inspect isn't enabled.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\\\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\\\" true}\n  \"\n  [bindings & body]\n  (when (cljs? &env)\n    `(ido\n       (let ~bindings\n         ~@body))))\n","~:reader-features",["^O",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["goog/define","js/com","js/com.fulcrologic","js/com.fulcrologic.fulcro","js/com.fulcrologic.fulcro.inspect","js/com.fulcrologic.fulcro.inspect.inspect-client","js/com.fulcrologic.fulcro.inspect.inspect-client.started?*","com.fulcrologic.fulcro.inspect.inspect-client/started?*","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/com.fulcrologic.fulcro.inspect.inspect-client.tools-app*","com.fulcrologic.fulcro.inspect.inspect-client/tools-app*","js/com.fulcrologic.fulcro.inspect.inspect-client.apps*","com.fulcrologic.fulcro.inspect.inspect-client/apps*","com.fulcrologic.fulcro.inspect.inspect-client/app-uuid-key","js/com.fulcrologic.fulcro.inspect.inspect-client.send-ch","com.fulcrologic.fulcro.inspect.inspect-client/send-ch","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async/dropping-buffer","com.fulcrologic.fulcro.inspect.inspect-client/post-message","type","data","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.inspect.inspect-client/cljs?","env","cljs.core/boolean","var_args","G__54203","com.fulcrologic.fulcro.inspect.inspect-client/isoget","js/Error","obj","k","com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$3","default","or__4131__auto__","G__54214","G__54215","goog.object/get","G__54216","cljs.core/name","com.fulcrologic.fulcro.inspect.inspect-client/app-state","app","G__54218","cljs.core/deref","com.fulcrologic.fulcro.inspect.inspect-client/runtime-atom","G__54221","com.fulcrologic.fulcro.inspect.inspect-client/state-atom","G__54223","com.fulcrologic.fulcro.inspect.inspect-client/app-uuid","G__54225","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.inspect.inspect-client/remotes","G__54227","com.fulcrologic.fulcro.inspect.inspect-client/app-id","G__54228","com.fulcrologic.fulcro.inspect.inspect-client/fulcro-app-id","com.fulcrologic.fulcro.inspect.inspect-client/get-component-name","component","G__54234","com.fulcrologic.fulcro.inspect.inspect_client.isoget.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.inspect.inspect-client/comp-transact!","tx","options","tx!","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","com.fulcrologic.fulcro.inspect.inspect-client/MAX_HISTORY_SIZE","com.fulcrologic.fulcro.inspect.inspect-client/fixed-size-assoc","size","db","key","value","map__54242","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","history","db'","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core.fnil.cljs$core$IFn$_invoke$arity$2","cljs.core/conj","cljs.core/count","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/first","p1__54240#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/vec","cljs.core/next","com.fulcrologic.fulcro.inspect.inspect-client/update-state-history","state","p1__54249#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/update","cljs.core/hash","com.fulcrologic.fulcro.inspect.inspect-client/db-from-history","state-hash","G__54255","com.fulcrologic.fulcro.inspect.inspect-client/db-changed!","old-state","new-state","app-uuid","diff","com.fulcrologic.fulcro.inspect.diff/diff","com.fulcrologic.fulcro.inspect.inspect-client/event-data","event","G__54261","goog.object/getValueByKeys","com.fulcrologic.fulcro.inspect.transit/read","com.fulcrologic.fulcro.inspect.inspect-client/start-send-message-loop","c__51860__auto__","cljs.core.async.impl.dispatch/run","f__51861__auto__","switch__51724__auto__","state_54293","state_val_54294","statearr-54299","cljs.core.async.impl.ioc-helpers/take!","inst_54290","cljs.core.async.impl.ioc-helpers/return-chan","inst_54267","statearr-54302","statearr-54303","statearr-54305","inst_54273","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","inst_54274","inst_54275","inst_54276","inst_54277","js/Date","inst_54278","inst_54279","cljs.core/PersistentHashMap","inst_54280","inst_54281","inst_54282","inst_54283","inst_54284","statearr-54309","statearr-54310","statearr-54311","inst_54288","statearr-54312","statearr-54315","state-machine__51725__auto__","ret-value__51726__auto__","result__51727__auto__","cljs.core/keyword-identical?","e54317","js/Object","ex__51728__auto__","statearr-54318","cljs.core.async.impl.ioc-helpers/process-exception","state__51862__auto__","statearr-54321","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","js/window","cljs.core/clj->js","com.fulcrologic.fulcro.inspect.transit/write","com.fulcrologic.fulcro.inspect.inspect-client/listen-local-messages","and__4120__auto__","G__54329","com.fulcrologic.fulcro.inspect.inspect-client/handle-devtool-message","G__54332","com.fulcrologic.fulcro.inspect.inspect-client/transact-inspector!","ref","com.fulcrologic.fulcro.inspect.inspect-client/dispose-app","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc","com.fulcrologic.fulcro.inspect.inspect-client/set-active-app","com.fulcrologic.fulcro.inspect.inspect-client/send-started!","remote","tx-id","txn","start","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/seq","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/List","com.fulcrologic.fulcro.inspect.inspect_client.transact_inspector_BANG_.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.inspect.inspect-client/send-finished!","response","finished","com.fulcrologic.fulcro.inspect.inspect-client/send-failed!","error","p__54383","map__54384","G__54390","cljs.core/Keyword","seq__54391","chunk__54392","count__54393","i__54394","temp__5804__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/vals","remote-names","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","p1__54378#","cljs.core.juxt.cljs$core$IFn$_invoke$arity$2","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/str","map__54405","target-state","temp__5802__auto__","render!","cljs.core/reset!","G__54414","G__54415","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","map__54418","tx-ref","b2__46796__auto__","map__54431","G__54434","historical-state","historical-app","G__54438","G__54439","map__54445","G__54449","G__54451","G__54452","map__54455","query","remote-name","msg-id","transmit!","ast","edn-query-language.core/query->ast","cljs.core/random-uuid","G__54469","G__54470","cljs.core/identity","p__54472","map__54473","body","result","error?","map__54484","log","log-js","warn","js/console.log","js/console.warn","js/console.error","com.fulcrologic.fulcro.inspect.inspect-client/install","_","js/document.documentElement.setAttribute","com.fulcrologic.fulcro.inspect.inspect-client/app-started!","networking","state*","cljs.core/assoc","p1__54492#","cljs.core/keys","p1__54495#","p2__54496#","p3__54493#","p4__54494#","cljs.core/add-watch","p__54508","p__54509","map__54510","map__54511","com.fulcrologic.fulcro.inspect.inspect-client/optimistic-action-finished!","state-before","component-name","G__54515"]]],"~:cache-keys",["~#cmap",[["^1O","goog/dom/tagname.js"],[1705355193711,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^O",[]],"~:deps-syms",["^1A","~$goog.dom.HtmlElement"]]],["^1O","goog/async/freelist.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","cljs/core/async/impl/ioc_helpers.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$cljs.core.async.impl.protocols"]]],["^1O","goog/labs/useragent/platform.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.labs.userAgent.util","~$goog.string"]]],["^1O","cljs/core/async.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^25","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1O","goog/timer/timer.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.Promise","~$goog.events.EventTarget"]]],["^1O","com/fulcrologic/fulcro/algorithms/lookup.cljc"],[1705354814234,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^1:"]]],["^1O","cljs/spec/gen/alpha.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$goog.Uri"]]],["^1O","cljs/tools/reader/impl/utils.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$clojure.string","^27"]]],["^1O","goog/math/math.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","~$goog.asserts"]]],["^1O","goog/string/stringformat.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^27"]]],["^1O","goog/events/eventtype.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1O","goog/labs/useragent/browser.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^26","^1@","~$goog.string.internal"]]],["^1O","goog/array/array.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B"]]],["^1O","goog/useragent/useragent.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^26","~$goog.reflect","^27"]]],["^1O","goog/structs/prioritypool.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1O","clojure/test/check/properties.cljc"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$clojure.test.check.generators","~$clojure.test.check.results"]]],["^1O","goog/async/run.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1O","com/cognitect/transit/impl/reader.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1O","clojure/test/check/generators.cljc"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^2A","~$clojure.test.check.random","~$clojure.test.check.rose-tree","^27"]]],["^1O","taoensso/encore.cljs"],[1705354814215,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^2A","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^1@","^27","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.structs","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1O","goog/debug/error.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/async/workqueue.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B","~$goog.async.FreeList"]]],["^1O","goog/events/events.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2C","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1O","goog/promise/resolver.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/events/browserfeature.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2D"]]],["^1O","cljs/tools/reader/edn.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^27","^2Y"]]],["^1O","clojure/test/check/random/doubles.cljs"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$clojure.test.check.random.longs"]]],["^1O","goog/structs/priorityqueue.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.structs.Heap"]]],["^1O","goog/net/xhrio.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.Timer","^2=","^2B","^37","^2?","~$goog.json.hybrid","~$goog.log","^34","^33","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^1@","^27","^32","~$goog.structs.Map","~$goog.uri.utils","^2D"]]],["^1O","goog/promise/thenable.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","com/fulcrologic/fulcro/algorithms/transit.cljc"],[1705354814234,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$cognitect.transit","~$com.cognitect.transit","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1O","goog/dom/nodetype.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","cljs/tools/reader/impl/inspect.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","com/cognitect/transit/util.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^1@"]]],["^1O","cljs/tools/reader.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^3<","^3=","^3>","^3;","^2=","^27","^2Y"]]],["^1O","clojure/test/check/rose_tree.cljc"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","clojure/test/check/impl.cljc"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","goog/net/wrapperxmlhttpfactory.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1O","goog/events/eventtarget.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.Disposable","^2B","^2Z","~$goog.events.Event","^39","^3:","^1@"]]],["^1O","clojure/test/check/random.cljs"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$clojure.test.check.random.doubles","^3@"]]],["^1O","goog/disposable/disposable.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.disposable.IDisposable"]]],["^1O","goog/object/object.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/structs/set.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^32","~$goog.structs.Collection","^3G"]]],"~:SHADOW-TIMESTAMP",[1705355194000,1705351486000],["^1O","goog/math/long.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B","^2I"]]],["^1O","goog/events/listener.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.events.ListenableKey"]]],["^1O","cljs/core/async/impl/channels.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^25","^2;","^29"]]],["^1O","goog/events/listenermap.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","~$goog.events.Listener","^1@"]]],["^1O","goog/events/eventid.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","taoensso/truss.cljs"],[1684871063313,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$taoensso.truss.impl"]]],["^1O","goog/string/internal.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","clojure/test/check.cljc"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^2L","^2S","^2M","^2T","~$clojure.test.check.impl"]]],["^1O","edn_query_language/core.cljc"],[1705354813723,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^@","~$clojure.test.check","^2L","~$clojure.test.check.properties"]]],["^1O","goog/functions/functions.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","cljs/core/async/impl/dispatch.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^29","^2O"]]],["^1O","taoensso/truss/impl.cljs"],[1684871063313,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^2U"]]],["^1O","clojure/walk.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","cljs/core/async/impl/protocols.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","goog/net/eventtype.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/structs/map.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1O","goog/net/xhriopool.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2[","~$goog.structs.PriorityPool"]]],["^1O","com/cognitect/transit/delimiters.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/structs/queue.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2="]]],["^1O","goog/labs/useragent/engine.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^26","^27"]]],["^1O","com/fulcrologic/fulcro/inspect/transit.cljs"],[1705354814234,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^3I","~$com.cognitect.transit.types","~$com.fulcrologic.fulcro.algorithms.transit"]]],["^1O","com/cognitect/transit/impl/decoder.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^2R","^41"]]],["^1O","taoensso/timbre/appenders/core.cljs"],[1684871063768,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^2A","^1C"]]],["^1O","cljs/reader.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^1@","^3?","^2W","^2Y"]]],["^1O","goog/asserts/asserts.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1O","cljs/core/async/impl/buffers.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^25"]]],["^1O","goog/debug/logbuffer.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B","~$goog.debug.LogRecord"]]],["^1O","goog/uri/uri.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^2B","^27","^32","^3G","^3H","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1O","goog/net/errorcode.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/disposable/idisposable.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/promise/promise.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","~$goog.Thenable","^2B","^36","~$goog.async.run","^2P","^45","~$goog.promise.Resolver"]]],["^1O","cljs/core/async/impl/timers.cljs"],[1705355194502,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^25","^28","^2;"]]],["^1O","cljs/spec/alpha.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^1@","~$clojure.walk","^H","^2A"]]],["^1O","goog/debug/logrecord.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/base.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",[]]],["^1O","goog/json/hybrid.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B","~$goog.json"]]],["^1O","goog/structs/structs.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^1@"]]],["^1O","cljs/tools/reader/impl/errors.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^3<","^2A","~$cljs.tools.reader.impl.inspect"]]],["^1O","clojure/string.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^27","^2Y"]]],["^1O","com/fulcrologic/fulcro/algorithms/tempid.cljc"],[1705354814234,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^1:","^4="]]],["^1O","goog/structs/pool.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^3N","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1O","clojure/test/check/random/longs/bit_count_impl.cljs"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","com/fulcrologic/fulcro/inspect/diff.cljc"],[1705354814234,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^@"]]],["^1O","goog/net/httpstatus.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","com/cognitect/transit/handlers.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^43","^41","~$goog.math.Long"]]],["^1O","goog/structs/heap.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^1@","~$goog.structs.Node"]]],["^1O","goog/debug/entrypointregistry.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B"]]],["^1O","goog/string/string.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2E"]]],["^1O","com/cognitect/transit/types.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^43","~$com.cognitect.transit.eq","^4B"]]],["^1O","goog/reflect/reflect.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/labs/useragent/util.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2E"]]],["^1O","com/cognitect/transit/eq.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^43"]]],["^1O","goog/debug/debug.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","~$goog.debug.errorcontext","^2D"]]],["^1O","goog/string/stringbuffer.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/debug/errorcontext.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","cljs/tools/reader/reader_types.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^3=","^27","^2Y"]]],["^1O","goog/iter/iter.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^2B","~$goog.functions","~$goog.math"]]],["^1O","goog/async/nexttick.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^37","~$goog.dom.TagName","^4F","^2F","^2G"]]],["^1O","goog/debug/logger.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^2B","~$goog.debug","~$goog.debug.LogBuffer","^47"]]],["^1O","com/cognitect/transit/caching.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^44"]]],["^1O","goog/events/event.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^3N","~$goog.events.EventId"]]],["^1O","cljs/tools/reader/impl/commons.cljs"],[1684871064013,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^3;","^3<","^3="]]],["^1O","goog/dom/htmlelement.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","cljs/core.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^4B","~$goog.math.Integer","^27","^1@","^2=","^2@","^2Y"]]],["^1O","com/cognitect/transit.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^43","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^41","^4D","^2Q","^2R"]]],["^1O","clojure/test/check/random/longs.cljs"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","~$clojure.test.check.random.longs.bit-count-impl","^4B","^B"]]],["^1O","goog/log/log.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^4I","~$goog.debug.LogManager","^47","~$goog.debug.Logger"]]],["^1O","goog/structs/collection.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/events/browserevent.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^4I","^2C","^3O","~$goog.events.EventType","^2I","^2D"]]],["^1O","goog/math/integer.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/structs/node.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","clojure/set.cljs"],[1705351486739,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","goog/uri/utils.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2=","^2B","^27"]]],["^1O","taoensso/timbre.cljs"],[1684871063768,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^2A","^1C","~$taoensso.timbre.appenders.core"]]],["^1O","goog/json/json.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","goog/events/listenable.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^4K"]]],["^1O","com/cognitect/transit/impl/writer.js"],[1684871062833,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^43","^2R","~$com.cognitect.transit.handlers","^41","^44","^4B"]]],["^1O","goog/net/xmlhttpfactory.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^3L"]]],["^1O","goog/net/xmlhttp.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^2B","~$goog.net.WrapperXmlHttpFactory","^3M"]]],["^1O","clojure/test/check/results.cljc"],[1705354814754,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B"]]],["^1O","com/fulcrologic/fulcro/inspect/inspect_client.cljc"],[1705354814234,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^16","^15","^1@","^1<","^18","^L","^1C","^1:"]]],["^1O","goog/net/xhrlike.js"],[1705355193711,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A"]]],["^1O","cognitect/transit.cljs"],[1684871062121,"^20",["^ ","^21",null,"^22",["^O",[]],"^23",["^1A","^B","^3J","^41","^4D","^4B"]]]]],"~:clj-info",["^ ","jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/rose_tree.cljc",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/generators.cljc",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/exec/threadpool.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/gen/alpha.clj",1680040089000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1684871063000,"jar:file:/Users/dataico.macbook.one/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/writer.clj",1684871062000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/alpha.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/ansi.clj",1684871062000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/edn.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/fulcrologic/fulcro/3.0.0-beta-13/fulcro-3.0.0-beta-13.jar!/com/fulcrologic/fulcro/inspect/inspect_client.cljc",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/taoensso/encore/2.94.0/encore-2.94.0.jar!/taoensso/encore.clj",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async/impl/ioc_macros.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/properties.cljc",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1684518327000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/edn-query-language/eql/0.0.7/eql-0.0.7.jar!/edn_query_language/core.cljc",1705354813000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/columns.clj",1684871062000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar!/clojure/spec/alpha.clj",1680040089000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre.clj",1684871063000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1684871064000,"jar:file:/Users/dataico.macbook.one/.m2/repository/io/aviso/pretty/0.1.33/pretty-0.1.33.jar!/io/aviso/exception.clj",1684871062000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/results.cljc",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/test.check/0.10.0-alpha4/test.check-0.10.0-alpha4.jar!/clojure/test/check/random.clj",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss.clj",1684871063000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/dispatch.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/taoensso/timbre/4.10.0/timbre-4.10.0.jar!/taoensso/timbre/appenders/core.clj",1684871063000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/cljs/core/async.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/reader.clj",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/concurrent.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1680040092000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/spec/gen/alpha.cljc",1705351486000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/core.async/0.4.500/core.async-0.4.500.jar!/clojure/core/async/impl/protocols.clj",1705355194000,"jar:file:/Users/dataico.macbook.one/.m2/repository/com/fulcrologic/fulcro/3.0.0-beta-13/fulcro-3.0.0-beta-13.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1705354814000,"jar:file:/Users/dataico.macbook.one/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1705351486000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions used by Fulcro to talk to Fulcro Inspect.","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",1,"^9",5,"^:",1,"^;",50],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K","^L"],"^M",null,"^N",["^O",[]],"^P",["^ ","^Q",["^ ","^R",["^S",[["^T","~$&","^U"]]],"^6","Like `clojure.core/let`, but elides the block if Inspect isn't enabled.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",347,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^V","^W","^X","^Y","^Z",true],"^[",["^ ","^R",["^S",[["~$&","^U"]]],"^6","Wrap a block of code that will only run if Inspect is enabled.  Code in these blocks will also be removed via\n  DCE in Closure.\n\n  This macro emits nothing when run in clj, and will output code that\n  should be completely removed by the Closure compiler if both\n  goog.DEBUG and com.fulcrologic.fulcro.inspect.inspect-client/INSPECT are false.\n\n  This allows you to enable inspect messages in production by adding the following to\n  your compiler config:\n\n  :closure-defines {\"com.fulcrologic.fulcro.inspect.inspect_client.INSPECT\" true}\n  ","^8",327,"^9",1,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^V","^10","^X","^Y","^Z",true]],"~:shadow/js-access-properties",["^O",["documentElement","setAttribute"]],"^V","^Y","^12",null,"^13",["^ ","^14","^15","^16","^16","^17","^18","^19","^1:","^1;","^1<","^1=","^16","^1>","^L","^18","^18","^B","^B","^1?","^1@","^1A","^1A","^1@","^1@","^L","^L","^1B","^1C","^15","^15","^1:","^1:","^1C","^1C","^1<","^1<"],"^1D",["^O",["^1E","^1F"]],"~:shadow/js-access-global",["^O",["window","Object","Date","document","Error"]],"^1G",null,"~:defs",["^ ","~$comp-transact!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",50,"^9",7,"^:",50,"^;",21,"^R",["^S",["~$quote",["^S",[["~$app","~$tx","~$options"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/comp-transact!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",21,"~:method-params",["^S",[["^6>","^6?","^6@"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^9",1,"~:variadic?",false,"^8",50,"~:ret-tag","~$any","^:",50,"~:max-fixed-arity",3,"~:fn-var",true,"^R",["^S",["^6=",["^S",[["^6>","^6?","^6@"]]]]]],"~$send-ch",["^ ","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/send-ch","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",22,"^9",1,"^:",22,"^;",17,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",22,"^9",10,"^:",22,"^;",17],"~:tag","^6G"],"~$send-started!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",148,"^9",7,"^:",148,"^;",20,"^R",["^S",["^6=",["^S",[["^6>","~$remote","~$tx-id","~$txn"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/send-started!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",20,"^6B",["^S",[["^6>","^6N","^6O","^6P"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",148,"^6F",["^O",["~$boolean","^6G"]],"^:",148,"^6H",4,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>","^6N","^6O","^6P"]]]]]],"~$listen-local-messages",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",100,"^9",7,"^:",100,"^;",28,"^R",["^S",["^6=",["^S",[[]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/listen-local-messages","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",28,"^6B",["^S",[[]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",100,"^6F","~$js","^:",100,"^6H",0,"^6I",true,"^R",["^S",["^6=",["^S",[[]]]]]],"~$isoget",["^ ","^6<",null,"^5",["^ ","~:private",true,"^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"~:top-fn",["^ ","^6E",false,"~:fixed-arity",3,"^6H",3,"^6B",["^S",[["~$obj","~$k"],["^6Z","~$k","~$default"]]],"^R",["^S",[["^6Z","~$k"],["^6Z","~$k","^6["]]],"^6D",["^S",[null,null]]],"^9",8,"^8",31,"^:",31,"^R",["^S",["^6=",["^S",[["^6Z","~$k"],["^6Z","~$k","^6["]]]]],"^6","Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n  `gobj/get`."],"^6W",true,"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/isoget","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"^6X",["^ ","^6E",false,"^6Y",3,"^6H",3,"^6B",["^S",[["^6Z","~$k"],["^6Z","~$k","^6["]]],"^R",["^S",[["^6Z","~$k"],["^6Z","~$k","^6["]]],"^6D",["^S",[null,null]]],"^6B",["^S",[["^6Z","~$k"],["^6Z","~$k","^6["]]],"^6C",null,"^6Y",3,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"~:methods",[["^ ","^6Y",2,"^6E",false,"^6L","^6G"],["^ ","^6Y",3,"^6E",false,"^6L",["^O",[null,"^6G"]]]],"^8",31,"^:",31,"^6H",3,"^6I",true,"^R",["^S",[["^6Z","~$k"],["^6Z","~$k","^6["]]],"^6","Like get, but for js objects, and in CLJC. In clj, it is just `get`. In cljs it is\n  `gobj/get`."],"~$state-atom",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",44,"^9",7,"^:",44,"^;",17,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/state-atom","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",17,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",44,"^6F",["^O",["^6G","~$clj-nil"]],"^:",44,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$send-finished!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",158,"^9",7,"^:",158,"^;",21,"^R",["^S",["^6=",["^S",[["^6>","^6N","^6O","~$response"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/send-finished!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",21,"^6B",["^S",[["^6>","^6N","^6O","^76"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",158,"^6F",["^O",["^6R","^6G"]],"^:",158,"^6H",4,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>","^6N","^6O","^76"]]]]]],"~$install",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",274,"^9",7,"^:",274,"^;",14,"^R",["^S",["^6=",["^S",[["~$_"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/install","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"^6B",["^S",[["~$_"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",274,"^6F",["^O",["^6U","^74"]],"^:",274,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["~$_"]]]]]],"~$app-id",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",47,"^9",7,"^:",47,"^;",13,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/app-id","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",13,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",47,"^6F",["^O",["^6G","^74"]],"^:",47,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$cljs?",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",26,"^9",7,"^:",26,"^;",12,"^R",["^S",["^6=",["^S",[["~$env"]]]]],"^6","Returns true when env is a cljs macro &env"],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/cljs?","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",12,"^6B",["^S",[["^7="]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",26,"^6F","^6R","^:",26,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^7="]]]]],"^6","Returns true when env is a cljs macro &env"],"~$app-uuid-key",["^ ","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/app-uuid-key","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",20,"^9",1,"^:",20,"^;",18,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",20,"^9",6,"^:",20,"^;",18],"^6L","~$cljs.core/Keyword"],"~$fixed-size-assoc",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",57,"^9",8,"^:",57,"^;",24,"^6W",true,"^R",["^S",["^6=",["^S",[["~$size","~$db","~$key","~$value"]]]]]],"^6W",true,"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/fixed-size-assoc","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",24,"^6B",["^S",[["^7C","^7D","^7E","^7F"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",57,"^6F",["^O",["~$clj","^6G"]],"^:",57,"^6H",4,"^6I",true,"^R",["^S",["^6=",["^S",[["^7C","^7D","^7E","^7F"]]]]]],"~$start-send-message-loop",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",93,"^9",7,"^:",93,"^;",30,"^R",["^S",["^6=",["^S",[[]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/start-send-message-loop","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",30,"^6B",["^S",[[]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",93,"^6F","^6G","^:",93,"^6H",0,"^6I",true,"^R",["^S",["^6=",["^S",[[]]]]]],"~$remotes",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",46,"^9",7,"^:",46,"^;",14,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/remotes","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",14,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",46,"^6F",["^O",["^6G","^74"]],"^:",46,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$handle-devtool-message",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",175,"^9",7,"^:",175,"^;",29,"^R",["^S",["^6=",["^S",[[["^ ","~:keys",["~$type","~$data"]]]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/handle-devtool-message","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",29,"^6B",["^S",[["~$p__54383"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",175,"^:",175,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[[["^ ","^7N",["^7O","^7P"]]]]]]]],"~$app-uuid",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",45,"^9",7,"^:",45,"^;",15,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/app-uuid","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",15,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",45,"^6F",["^O",["^6G","^74"]],"^:",45,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$tools-app*",["^ ","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/tools-app*","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",18,"^9",1,"^:",18,"^;",20,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",18,"^9",10,"^:",18,"^;",20],"^6L","~$cljs.core/Atom"],"~$INSPECT",["^ ","^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",14,"^9",23,"^:",14,"^;",30,"^6L","^6R","~:declared",true],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/INSPECT","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",30,"^9",10,"^8",14,"^7Y",true,"^:",14,"^6L","^6R"],"~$app-started!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",287,"^9",7,"^:",287,"^;",19,"^R",["^S",["^6=",["^S",[["^6>"]]]]],"^6","Register the application with Inspect, if it is available."],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/app-started!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",287,"^6F","^6G","^:",287,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]],"^6","Register the application with Inspect, if it is available."],"~$post-message",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",23,"^9",7,"^:",23,"^;",19,"^R",["^S",["^6=",["^S",[["^7O","^7P"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/post-message","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^6B",["^S",[["^7O","^7P"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",23,"^6F",["^O",["^6R","^6G"]],"^:",23,"^6H",2,"^6I",true,"^R",["^S",["^6=",["^S",[["^7O","^7P"]]]]]],"~$optimistic-action-finished!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",304,"^9",7,"^:",304,"^;",34,"^R",["^S",["^6=",["^S",[["^6>",["^ ","^7N",["~$component","~$ref","~$state","~$com.fulcrologic.fulcro.algorithms.tx-processing/options"]],["^ ","^7N",["^6O","^6?","~$state-before"]]]]]]],"^6","Notify inspect that a transaction finished.\n\n   app - The app\n   env - The mutation env that completed."],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/optimistic-action-finished!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",34,"^6B",["^S",[["^6>","~$p__54508","~$p__54509"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",304,"^6F",["^O",["^6R","^6G"]],"^:",304,"^6H",3,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>",["^ ","^7N",["^84","^85","^86","^87"]],["^ ","^7N",["^6O","^6?","^88"]]]]]]],"^6","Notify inspect that a transaction finished.\n\n   app - The app\n   env - The mutation env that completed."],"~$dispose-app",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",120,"^9",7,"^:",120,"^;",18,"^R",["^S",["^6=",["^S",[["^7S"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/dispose-app","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",18,"^6B",["^S",[["^7S"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",120,"^6F",["^O",["^6R","^6G"]],"^:",120,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^7S"]]]]]],"~$MAX_HISTORY_SIZE",["^ ","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/MAX_HISTORY_SIZE","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",55,"^9",1,"^:",55,"^;",22,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",55,"^9",6,"^:",55,"^;",22],"^6L","~$number"],"~$started?*",["^ ","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/started?*","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",17,"^9",1,"^:",17,"^;",19,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",17,"^9",10,"^:",17,"^;",19],"^6L","^7W"],"~$app-state",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",42,"^9",7,"^:",42,"^;",16,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/app-state","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",16,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",42,"^6F",["^O",["^6G","^74"]],"^:",42,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$update-state-history",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",68,"^9",8,"^:",68,"^;",28,"^6W",true,"^R",["^S",["^6=",["^S",[["^6>","^86"]]]]],"^6","Record a snapshot of history on the app itself for inspect to reference via events to do things like preview\n   history."],"^6W",true,"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/update-state-history","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",28,"^6B",["^S",[["^6>","^86"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",68,"^6F",["^O",[null,"^6G"]],"^:",68,"^6H",2,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>","^86"]]]]],"^6","Record a snapshot of history on the app itself for inspect to reference via events to do things like preview\n   history."],"~$send-failed!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",167,"^9",7,"^:",167,"^;",19,"^R",["^S",["^6=",["^S",[["^6>","^6O","~$error"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/send-failed!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^6B",["^S",[["^6>","^6O","^8H"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",167,"^6F",["^O",["^6R","^6G"]],"^:",167,"^6H",3,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>","^6O","^8H"]]]]]],"~$db-from-history",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",75,"^9",7,"^:",75,"^;",22,"^R",["^S",["^6=",["^S",[["^6>","~$state-hash"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/db-from-history","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",22,"^6B",["^S",[["^6>","^8K"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",75,"^6F",["^O",["^6G","^74"]],"^:",75,"^6H",2,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>","^8K"]]]]]],"~$apps*",["^ ","^V","~$com.fulcrologic.fulcro.inspect.inspect-client/apps*","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",19,"^9",1,"^:",19,"^;",15,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",19,"^9",10,"^:",19,"^;",15],"^6L","^7W"],"~$transact-inspector!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",114,"^9",7,"^:",114,"^;",26,"^R",["^S",["^6=",["^S",[["^6?"],["^85","^6?"]]]]],"^6X",["^ ","^6E",false,"^6Y",2,"^6H",2,"^6B",["^S",[["^6?"],["^85","^6?"]]],"^R",["^S",[["^6?"],["^85","^6?"]]],"^6D",["^S",[null,null]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/transact-inspector!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",26,"^6X",["^ ","^6E",false,"^6Y",2,"^6H",2,"^6B",["^S",[["^6?"],["^85","^6?"]]],"^R",["^S",[["^6?"],["^85","^6?"]]],"^6D",["^S",[null,null]]],"^6B",["^S",[["^6?"],["^85","^6?"]]],"^6C",null,"^6Y",2,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^71",[["^ ","^6Y",1,"^6E",false,"^6L",["^O",["^6R","^6G"]]],["^ ","^6Y",2,"^6E",false,"^6L",["^O",["^6R","^6G"]]]],"^8",114,"^:",114,"^6H",2,"^6I",true,"^R",["^S",[["^6?"],["^85","^6?"]]]],"~$get-component-name",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",49,"^9",7,"^:",49,"^;",25,"^R",["^S",["^6=",["^S",[["^84"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/get-component-name","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",25,"^6B",["^S",[["^84"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",49,"^6F",["^O",["^6G","^74"]],"^:",49,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^84"]]]]]],"~$db-changed!",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",78,"^9",7,"^:",78,"^;",18,"^R",["^S",["^6=",["^S",[["^6>","~$old-state","~$new-state"]]]]],"^6","Notify Inspect that the database changed"],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/db-changed!","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",18,"^6B",["^S",[["^6>","^8T","^8U"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",78,"^6F",["^O",["^6R","^6G"]],"^:",78,"^6H",3,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>","^8T","^8U"]]]]],"^6","Notify Inspect that the database changed"],"~$event-data",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",90,"^9",7,"^:",90,"^;",17,"^R",["^S",["^6=",["^S",[["~$event"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/event-data","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",17,"^6B",["^S",[["^8X"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",90,"^6F",["^O",["^6G","^74"]],"^:",90,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^8X"]]]]]],"~$runtime-atom",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",43,"^9",7,"^:",43,"^;",19,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/runtime-atom","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",19,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",43,"^6F",["^O",["^6G","^74"]],"^:",43,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$fulcro-app-id",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",48,"^9",7,"^:",48,"^;",20,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/fulcro-app-id","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",20,"^6B",["^S",[["^6>"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",48,"^6F","^6G","^:",48,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^6>"]]]]]],"~$set-active-app",["^ ","^6<",null,"^5",["^ ","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^8",124,"^9",7,"^:",124,"^;",21,"^R",["^S",["^6=",["^S",[["^7S"]]]]]],"^V","~$com.fulcrologic.fulcro.inspect.inspect-client/set-active-app","^7","com/fulcrologic/fulcro/inspect/inspect_client.cljc","^;",21,"^6B",["^S",[["^7S"]]],"^6C",null,"^6D",["^S",[null,null]],"^9",1,"^6E",false,"^8",124,"^6F",["^O",["^6R","^6G"]],"^:",124,"^6H",1,"^6I",true,"^R",["^S",["^6=",["^S",[["^7S"]]]]]]],"^1F",["^ ","^Y","^Y","^B","^B","^19","^1:","^1>","^L","^L","^L","^1B","^1C","^1:","^1:","^1C","^1C"],"~:cljs.analyzer/constants",["^ ","^1D",["^O",["~:fulcro.inspect.client/init-app","~:remote","~:fulcro.inspect.ui-parser/msg-response","~:fulcro.history/db-before-hash","~:fulcro.inspect.ui.network/history-id","~:fulcro.inspect.client/tx","~:state-before","~:fulcro.inspect.client/state-hash","~$fulcro.inspect.ui.network/request-start","~:fulcro.inspect.client/new-client-transaction","~:com.fulcrologic.fulcro.algorithms.tx-processing/ast","~:com.fulcrologic.fulcro.algorithms.tx-processing/update-handler","~$fulcro.inspect.ui.network/request-finish","~:else","~:ref","~:fulcro.inspect.core/app-id","~:displayName","~:fulcro.history/db-after-hash","~:render!","~:fulcro.inspect.client/set-active-app","~:fulcro.inspect.client/prev-state-hash","^X","~:warn","~:fulcro.history/tx","~:tx!","~:fulcro.inspect.client/initial-state","~:tx-ref","~:fulcro.inspect.ui.network/request-edn","~:fulcro.inspect.client/client-version","~:fulcro.inspect.client/state-history","~:fulcro.inspect.ui.network/request-id","~:recur","~:type","~:log-js","~:state","~:fulcro.inspect.ui.network/error","~:fulcro.inspect.ui.network/request-started-at","~:fulcro.inspect.core/app-uuid","~:force-root?","~:fulcro.inspect.client/message-response","~:component","~:schedule-render!","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/id","~:fulcro.inspect.client/transact-inspector","~:fulcro.inspect.client/remote","~:transmit!","~:fulcro.inspect.ui.network/response-edn","~:tx","~:fulcro.inspect.ui-parser/msg-id","~:com.fulcrologic.fulcro.application/runtime-atom","~:fulcro.inspect.client/db-update","~:fulcro$options","~:fulcro.inspect.ui.network/request-finished-at","~:info","~:ident-ref","~:fulcro.history/client-time","~:target-state","~:remote-error?","~:com.fulcrologic.fulcro.algorithms.tx-processing/id","~:fulcro.inspect.client/remotes","~:error","~:tx-id","~:fulcro.inspect.ui.network/remote","~:fulcro-inspect-remote-message","~:version","~:query","~:fulcro.history/network-sends","~:timestamp","~:body","~:fulcro.inspect.client/tx-ref","~:fulcro.inspect.client/dispose-app","~:fulcro.inspect.client/state-delta","~:com.fulcrologic.fulcro.algorithms.tx-processing/options","~:auto","~:fulcro.inspect.client/history","~:log","~:p","~:com.fulcrologic.fulcro.application/remotes","~:fulcro.inspect.ui.transactions/tx-id","~:com.fulcrologic.fulcro.algorithms.tx-processing/idx","~:com.fulcrologic.fulcro.algorithms.tx-processing/result-handler","~:data"]],"~:order",["^9Y","^X","^:2","^::","^:U","^9D","^:3","^:<","^9E","^9L","^:S","^9Q","^:;","^9I","^9<","^:P","^9S","^:H","^9T","^:Y","^:L","^9B","^:4","^9:","^:N","^:O","^9H","^99","^9=","^:G","^9R","^9X","^9O","^9A","^:=","^:7","^9W","^95","^:D","^9M","^96","^:A","^:1","^9Z","^:>","~:p","^:R","^:8","^9N","^9C","^:E","^9G","^:5","^:J","^:9","^:6","^:C","^9?","^:W","^:Q","^9@","^:X","^:M","^:B","^9[","^97","^:T","^9U","^9J","^9P","^:I","^:0","^9V","^:F","^9;","^:V","^:@","^9K","^98","^9F","^:K","^:?","^9>"]],"^1K",["^ ","^1F",["^O",[]],"^1E",["^O",[]]],"^1L",["^ "],"^1M",["^1A","^B","^16","^15","^1@","^1<","^18","^L","^1C","^1:"]],"^X","^Y","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1[",[["^;1","~:static-fns"],true,["^;1","~:elide-asserts"],false,["^;1","~:optimize-constants"],null,["^;1","^1R"],null,["^;1","~:external-config"],null,["^;1","~:tooling-config"],null,["^;1","~:emit-constants"],null,["^;1","~:load-tests"],null,["^;1","~:form-size-threshold"],null,["^;1","~:infer-externs"],true,["^;1","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;1","~:fn-invoke-direct"],null,["^;1","~:source-map"],"/dev/null"]]]