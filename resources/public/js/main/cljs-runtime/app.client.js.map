{"version":3,"sources":["app/client.cljs"],"mappings":"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","names":["options__47534__auto__","_","props","com.fulcrologic.fulcro.components/wrapped-render","map__51317","com.fulcrologic.fulcro.components/props","cljs.core/--destructure-map","cljs.core.get","js/app","js/app.client","js/app.client.Car","com.fulcrologic.fulcro.components/react-constructor","com.fulcrologic.fulcro.components/configure-component!","app.client/Car","this","id","model","com.fulcrologic.fulcro.dom.macro_create_element","app.client/ui-car","com.fulcrologic.fulcro.components.factory","map__51318","js/app.client.Person","app.client/Person","name","age","cars","com.fulcrologic.fulcro.components.get_query","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.components.transact_BANG_","G__51319","app.model.person/make-older","cljs.core.map","app.client/ui-person","p__51320","map__51321","params","com.fulcrologic.fulcro.components/make-state-map","map__51322","js/app.client.PersonList","app.client/PersonList","people","cnt","cljs.core.reduce","p__51323","map__51324","c","app.client/ui-person-list","map__51325","js/app.client.Root","app.client/Root","list","js/app.client.APP","app.client/APP","com.fulcrologic.fulcro.application.fulcro_app","com.fulcrologic.fulcro.networking.http-remote/fulcro-http-remote","app","com.fulcrologic.fulcro.data_fetch.load_BANG_","app.client/init","com.fulcrologic.fulcro.application.mount_BANG_"],"sourcesContent":["(ns app.client\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [com.fulcrologic.fulcro.dom :as dom :refer [div ul li h1 h2 h3 h4 button]]\n    [com.fulcrologic.fulcro.networking.http-remote :as http]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]\n    [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n    [com.fulcrologic.fulcro.algorithms.data-targeting :as targeting]\n    [app.model.person :refer [make-older]]))\n\n(defsc Car [this {:car/keys [id model] :as props}]\n  {:query [:car/id :car/model]\n   :ident :car/id}\n  (div (h4 model)))\n\n(def ui-car (comp/factory Car {:keyfn :car/id}))\n\n(defsc Person [this {:person/keys [id name age cars] :as props}]\n  {:query [:person/id :person/name :person/age {:person/cars (comp/get-query Car)}]\n   :ident :person/id}\n  (div :.ui.segment {}\n    (h2 \"Name: \" name)\n    (h2 \"Age: \" age)\n    (button :.ui.button {:onClick\n                         #(comp/transact! this [(make-older {:person/id id})] {:refresh [:person-list/people]})} \"Make Older\")\n    (h2 \"id: \" id)\n    (h2 \"Cars:\")\n    (ul (map ui-car cars)))\n  )\n\n(def ui-person (comp/factory Person {:keyfn :person/id}))\n\n(defsc PersonList [this {:person-list/keys [people]}]\n  {:query         [{:person-list/people (comp/get-query Person)}]\n   :ident         (fn [] [:component/id ::person-list])\n   :initial-state {:person-list/people []}}\n  (div\n    (let [cnt (reduce (fn [c {:person/keys [age]}]\n                        (if (> age 30) (inc c) c)) 0 people)]\n      (h2 \"People Over 30: \" cnt))\n    (ul (map ui-person people))\n    ))\n\n(def ui-person-list (comp/factory PersonList))\n\n(defsc Root [this {:root/keys [list]}]\n  {:query         [{:root/list (comp/get-query PersonList)}]\n   :initial-state {:root/list {}}}\n  (div :.ui.segment {}\n    (if list\n      (div (h1 \"People\")\n        (ui-person-list list))\n      (h1 \"Loading...\")\n      )\n    ))\n\n(defonce APP (app/fulcro-app {:remotes          {:remote (http/fulcro-http-remote {})}\n                              :client-did-mount (fn [app]\n                                                  (df/load! app :all-people Person\n                                                    {:target [:component/id ::person-list :person-list/people]}\n                                                    ))}))\n\n(defn ^:export init []\n  (app/mount! APP Root \"app\"))\n"]}